load("@bazel_skylib//rules:build_test.bzl", "build_test")

load(
    "@rules_ocaml//build:rules.bzl",
    "ocaml_archive",
    "ocaml_binary",
    "ocaml_module",
    "ocaml_test",
)

TEST_OPTS = [
    "-cclib", "-lm",
    "-cclib", "-lz",
    "-cclib", "-lstdc++",
    "-cclib", "-lcurses",
    "-ccopt", "/opt/homebrew/lib/libzstd.1.5.5.dylib",
    # "-verbose",
    # "-ccopt", "-Wl,-v", ## pass verbose to assembler
]

test_suite(
    name = "test",
    tests = [":builds", "clibs"]
)

###########
ocaml_test(
    name = "analysis_test",
    main = ":Analysis",
    opts = TEST_OPTS,
    toolchains = ["//:repo_paths"],
    timeout = "short"
)

ocaml_module(
    name = "Analysis",
    struct = "analysis.ml",
    deps   = ["//src/analysis:Llvm_analysis"],
    opts = ["-w", "+A-27-70"],
)

###########
ocaml_test(
    name = "bitreader_test",
    args = ["bitcode.bc"],
    main = ":Bitreader",
    opts = TEST_OPTS,
    toolchains = ["//:repo_paths"],
    timeout = "short"
)

ocaml_module(
    name = "Bitreader",
    struct = "bitreader.ml",
    deps   = ["//src/bitreader:Llvm_bitreader",
              "//src/bitwriter:Llvm_bitwriter"])

###########
ocaml_test(
    name = "bitwriter_test",
    args = ["bitcode.bc"],
    main = ":Bitwriter",
    opts = TEST_OPTS,
    toolchains = ["//:repo_paths"],
    timeout = "short"
)

ocaml_module(
    name = "Bitwriter",
    struct = "bitwriter.ml",
    deps   = ["//src/bitreader:Llvm_bitreader",
              "//src/bitwriter:Llvm_bitwriter"])

###########
ocaml_test(
    name = "core_test",
    args = ["bitcode.bc"],
    main = ":Core",
    opts = TEST_OPTS,
    toolchains = ["//:repo_paths"],
    timeout = "short"
)

ocaml_module(
    name = "Core",
    struct = "core.ml",
    deps   = ["//src/analysis:Llvm_analysis",
              "//src/bitwriter:Llvm_bitwriter",
              "//test/Utils:Testsuite"])

###########
ocaml_test(
    name = "debuginfo_test",
    # args = ["bitcode.bc"],
    main = ":Debuginfo",
    opts = TEST_OPTS,
    toolchains = ["//:repo_paths"],
    timeout = "short"
)

ocaml_module(
    name = "Debuginfo",
    struct = "debuginfo.ml",
    deps   = ["//src/all_backends:Llvm_all_backends",
              "//src/target:Llvm_target",
              "//src/analysis:Llvm_analysis",
              "//src/debuginfo:Llvm_debuginfo",
              "//test/Utils:Testsuite"]
)

###########
ocaml_test(
    name = "passmgr_builder_test",
    args = ["bitcode.bc"],
    main = ":Passmgr_builder",
    opts = TEST_OPTS,
    toolchains = ["//:repo_paths"],
    timeout = "short"
)

ocaml_module(
    name = "Passmgr_builder",
    struct = "passmgr_builder.ml",
    deps   = [
        "//src/transforms/passmgr_builder:Llvm_passmgr_builder"
    ]
)

###########
ocaml_test(
    name = "scalar_opts_test",
    # args = ["bitcode.bc"],
    main = ":Scalar_Opts",
    opts = TEST_OPTS,
    toolchains = ["//:repo_paths"],
    timeout = "short"
)

ocaml_module(
    name = "Scalar_opts",
    struct = "scalar_opts.ml",
    deps   = [
        "//src/transforms/passmgr_builder:Llvm_passmgr_builder",
        "//src/transforms/scalar_opts:Llvm_scalar_opts"
    ]
)

################################
build_test(
    name = "builds",
    targets = [
        "//src/all_backends:Llvm_all_backends",
        "//src/analysis:Llvm_analysis",
        # "//src/backends:Llvm_backend", # not yet
        "//src/bitreader:Llvm_bitreader",
        "//src/bitwriter:Llvm_bitwriter",
        "//src/debuginfo:Llvm_debuginfo",
        "//src/executionengine:Llvm_executionengine",
        "//src/irreader:Llvm_irreader",
        "//src/linker:Llvm_linker",
        "//src/llvm:Llvm",
        "//src/target:Llvm_target",
        "//src/transforms/ipo:Llvm_ipo",
        "//src/transforms/passmgr_builder:Llvm_passmgr_builder",
        "//src/transforms/scalar_opts:Llvm_scalar_opts",
        "//src/transforms/utils:Llvm_transform_utils",
        "//src/transforms/vectorize:Llvm_vectorize",
        ]
)

## NB: clib deps of ocaml_module are not built
## until they are needed for linking, so we build
## them separately here.

build_test(
    name = "clibs",
    targets = [
        "//src/all_backends:all_backends_c",
        "//src/analysis:analysis_c",
        "//src/backends:backend_c",
        "//src/bitreader:bitreader_c",
        "//src/bitwriter:bitwriter_c",
        "//src/debuginfo:debuginfo_c",
        "//src/executionengine:executionengine_c",
        "//src/irreader:irreader_c",
        "//src/linker:linker_c",
        "//src/llvm:llvm_c",
        "//src/target:target_c",
        "//src/transforms/ipo:ipo_c",
        "//src/transforms/passmgr_builder:passmgr_builder_c",
        "//src/transforms/scalar_opts:scalar_opts_c",
        "//src/transforms/utils:transform_utils_c",
        "//src/transforms/vectorize:vectorize_c",
        ]
)
