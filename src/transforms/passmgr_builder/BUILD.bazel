load("@rules_ocaml//build:rules.bzl",
     "ocaml_module",
     "ocaml_signature")

package(default_visibility=["//visibility:public"])

ocaml_signature(
    name = "Llvm_passmgr_builder_cmi",
    src = "llvm_passmgr_builder.mli",
    deps = ["//src/llvm:Llvm_cmi"]
)

ocaml_module(
    name = "Llvm_passmgr_builder",
    struct = "llvm_passmgr_builder.ml",
    sig    = ":Llvm_passmgr_builder_cmi",
    opts   = ["-w", "-labels-omitted"], # 6
    deps   = [
        "//src/llvm:Llvm",
        "//src/target:Llvm_target",
        ":passmgr_builder_c"
    ],
)

cc_library(
    name = "passmgr_builder_c",
    srcs = [
        "passmgr_builder_ocaml.c",
        "@llvm_toolchain_llvm//:include",
        "@llvm_toolchain_llvm//lib:passes-libs",
    ],
    additional_compiler_inputs = [
        "@llvm_toolchain_llvm//:include",
    ],
    copts = [
        # FIXME: undeclared fn 'alloc_custom'
        "-Wno-implicit-function-declaration", #FIXME

        "-I$(@toolchains_llvm)/include",
        "-I$(@ocaml)/lib/c",
    ],
    deps = [
        "@ocaml//lib/c:sdk",
    ],
    visibility = ["//visibility:public"],
    toolchains = ["//:repo_paths"]
)
